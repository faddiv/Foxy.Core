<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using System;

namespace Foxy.Core.Cleanup
{
    partial class DisposableContainerExtensions
    {
<#    for(int i = 1; i <= 16; i++) { 
        var range = Enumerable.Range(1,i).ToList();
        var typeParameters = string.Join(", ", range.Select(e => $"T{e}"));
#>
        /// <summary>
        /// Subscribe the handler for the given event and adds the unsubscription 
        /// to the DisposableContanier so it is called on Dispose.
        /// </summary>
        /// <param name="container">The container where the event unsubscription is added.</param>
        /// <param name="type">The type which contains the static event.</param>
        /// <param name="eventName">The name of the event. It is case sensitive.</param>
        /// <param name="handler">The handler which are subscripted to the event.</param>
        public static void AddEventSubscription<<#= typeParameters #>>(this DisposableContainer container,
            Type type,
            string eventName,
            Action<<#= typeParameters #>> handler)
        {
            container.AddManagedResource(new EventSubscription(type, eventName, handler));
        }
<#    } #>
    }
}
